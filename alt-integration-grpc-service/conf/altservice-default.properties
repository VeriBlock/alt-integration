# Service host and port
app.api.host=0.0.0.0
app.api.port=19012

validation.vb.block.difficulty=false
validation.btc.block.difficulty=false

# network=main|test|alpha|custom
veriblock.blockchain.network=test

# applicable and required if veriblock.blockchain.network=custom
# veriblock.blockchain.minimumDifficulty=9999872
# veriblock.blockchain.transactionMagicByte=AA

# network=main|test|regtest|custom
bitcoin.blockchain.network=test

# applicable and required if bitcoin.blockchain.network=custom
# bitcoin.blockchain.powLimit=0000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
# bitcoin.blockchain.powTargetTimespan=1209600
# bitcoin.blockchain.powTargetSpacing=600
# bitcoin.blockchain.allowMinDifficultyBlocks=true
# bitcoin.blockchain.powNoRetargeting=false


# the score when the rewards starts decreasing
popReward.curve.startOfDecreasingLine=100.0
# this is the length of the decreasing part of the reward curve
popReward.curve.widthOfDecreasingLineNormal=100.0
# this is the length of the decreasing part of the reward curve for keystone block
popReward.curve.widthOfDecreasingLineKeystone=200.0
# we decrease each score point to 80% of initial value when difficulty is above 1.0
popReward.curve.aboveIntendedPayoutMultiplierNormal=0.8000
# we decrease each keystone score point to 57% of initial value when difficulty is above 1.0
popReward.curve.aboveIntendedPayoutMultiplierKeystone=0.5735

# miners' reward in altchain coins (use smallest units here eg wei for Ethereum)
popReward.calculator.basicReward=1000
# how many payout rounds we have
popReward.calculator.payoutRounds=4
# keystone is on 4th round (numeration starts from 0)
popReward.calculator.keystoneRound=3
# we gradually increase the reward for every consecutive payout round
popReward.calculator.roundRatios=0.97,1.03,1.07,3.00
# we limit the maximum rewards to 200% for normal PoP
popReward.calculator.maxRewardThresholdNormal=200.0
# we limit the maximum rewards to 300% for keystone PoP
popReward.calculator.maxRewardThresholdKeystone=300.0
# use flat score on 3rd round
popReward.calculator.flatScoreRound=2
popReward.calculator.flatScoreRoundUse=true
# we score each VeriBlock and lower the reward for late blocks
popReward.calculator.relativeScoreLookupTable=1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.48296816,0.31551694,0.23325824,0.18453616,0.15238463,0.12961255,0.11265630,0.09955094,0.08912509,0.08063761,0.07359692,0.06766428,0.06259873,0.05822428,0.05440941,0.05105386,0.04807993,0.04542644,0.04304458,0.04089495,0.03894540,0.03716941,0.03554497,0.03405359,0.03267969,0.03141000,0.03023319,0.02913950,0.02812047,0.02716878,0.02627801,0.02544253,0.02465739,0.02391820,0.02322107,0.02256255,0.02193952,0.02134922
# average 50 blocks before the endorsed block to calculate it's difficulty
popReward.calculator.popDifficultyAveragingInterval=50
# the interval for calculating score for the block
popReward.calculator.popRewardSettlementInterval=400

## No defaults section - should be set manually for a given altchain

# http://95.217.67.120/alt-integration/api/v1.0/bootstraps

# VeriBlock bootstrap blocks
veriblock.blockchain.bootstrap.blocks=00000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000027100101000000000000

# Bitcoin bootstrap blocks
bitcoin.blockchain.bootstrap.blocks=010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010270000FFFF7F2000000000
bitcoin.blockchain.bootstrap.firstBlockHeight=1610826

altChain.parameters.keystoneInterval=5

# the maximum number of VeriBlock blocks that can occur without a publication of a keystone before 'continuity' is lost
# https://github.com/VeriBlock/integration-reference-btc/blob/develop/src/vbk/config.hpp
forkResolution.keystoneFinalityDelay=50
forkResolution.amnestyPeriod=20